[
  {
    "objectID": "spread.html",
    "href": "spread.html",
    "title": "Transmission Metrics",
    "section": "",
    "text": "The Effective Reproduction Number (Re) is the average number of secondary premises infected by a source per day. Re is used to estimate epidemic potential.\n\n\nCode\n## exclude index cases (source == 0)\ntransmissions &lt;- merge %&gt;% \n  filter(source != 0)\n\n## find the number of transmissions per source for each iteration and infect_day,\niteration_Re &lt;- transmissions %&gt;%\n  group_by(region, scenario_type, preclinical, iteration, infect_day, source) %&gt;%\n  summarize(num_transmissions = n(), .groups = \"drop\") %&gt;%\n  group_by(region, scenario_type, preclinical, iteration, infect_day) %&gt;%\n  summarize(Re = mean(num_transmissions), .groups = \"drop\")\n\n## summarize daily Re across iterations\ndaily_Re_summary &lt;- iteration_Re %&gt;%\n  group_by(region, scenario_type, preclinical, infect_day) %&gt;%\n  summarize(\n    mean = mean(Re, na.rm = TRUE),\n    q05 = quantile(Re, probs = 0.05, na.rm = TRUE),\n    q25 = quantile(Re, probs = 0.25, na.rm = TRUE),\n    q50 = quantile(Re, probs = 0.50, na.rm = TRUE),\n    q75 = quantile(Re, probs = 0.75, na.rm = TRUE),\n    q95 = quantile(Re, probs = 0.95, na.rm = TRUE),\n    .groups   = \"drop\")\n\n## Daily summary\ndaily_Re &lt;- daily_Re_summary %&gt;%\n  group_by(region, scenario_type, preclinical) %&gt;%\n  complete(infect_day = 10:365, \n            fill = list(mean = 0, q05 = 0, \n                        q25 = 0, q50 = 0, q75 = 0, q95 = 0)) %&gt;%\n  ungroup()\n\n\n\n\n\nCentral U.S.Eastern U.S.\n\n\nView subset of daily Re summary\n\n\nCode\n## Filter to central region\ndaily_Re_central &lt;- daily_Re %&gt;%\n  filter(region == \"central\")\n\n## Filter to scenario\ndaily_Re_central_select &lt;- daily_Re_central %&gt;%\n  filter(scenario_type == \"suboptimal\") %&gt;%\n  filter(preclinical == \"3\")\n\n## Select and order columns to display\ndaily_Re_central_select &lt;- daily_Re_central_select[c(\"infect_day\", \"mean\", \"q05\", \"q25\", \"q50\", \"q75\", \"q95\")]\n\nhead(daily_Re_central_select)\n\n\n\n\n\n\ninfect_day\nmean\nq05\nq25\nq50\nq75\nq95\n\n\n\n\n10\n0.000000\n0\n0\n0\n0\n0.000\n\n\n11\n2.155172\n1\n1\n2\n3\n4.150\n\n\n12\n1.771429\n1\n1\n1\n2\n4.000\n\n\n13\n1.955095\n1\n1\n1\n2\n5.000\n\n\n14\n1.945014\n1\n1\n1\n2\n5.425\n\n\n15\n1.886877\n1\n1\n1\n2\n5.000\n\n\n\n\n\n\n\n\nView subset of daily Re summary\n\n\nCode\n## Filter to eastern region\ndaily_Re_eastern &lt;- daily_Re %&gt;%\n  filter(region == \"eastern\")\n\n## Filter to scenario\ndaily_Re_eastern_select &lt;- daily_Re_eastern %&gt;%\n  filter(scenario_type == \"suboptimal\") %&gt;%\n  filter(preclinical == \"3\")\n\n## Select and order columns to display\ndaily_Re_eastern_select &lt;- daily_Re_eastern_select[c(\"infect_day\", \"mean\", \"q05\", \"q25\", \"q50\", \"q75\", \"q95\")]\n\nhead(daily_Re_eastern_select)\n\n\n\n\n\n\ninfect_day\nmean\nq05\nq25\nq50\nq75\nq95\n\n\n\n\n10\n0.000000\n0\n0\n0\n0.000\n0.0\n\n\n11\n2.153846\n1\n1\n2\n3.000\n4.0\n\n\n12\n1.971014\n1\n1\n2\n3.000\n4.6\n\n\n13\n2.043243\n1\n1\n1\n3.000\n5.0\n\n\n14\n1.878851\n1\n1\n1\n2.375\n4.5\n\n\n15\n2.013787\n1\n1\n1\n3.000\n5.0\n\n\n\n\n\n\n\n\n\n\n\n\nThe dashed line is at Re = 1\n\nCentral U.S.Eastern U.S.\n\n\n\n\nCode\n## Prepare data\ndaily_Re &lt;- daily_Re_central %&gt;%\n  mutate(\n    preclinical = recode(preclinical,\n                               \"0\" = \"None\",\n                               \"1\" = \"1 Day\",\n                               \"2\" = \"2 Days\",\n                               \"3\" = \"3 Days\",\n                               \"6\" = \"6 Days\")\n  ) %&gt;%\n  mutate(\n    scenario_type = recode(scenario_type,\n                               \"optimal\" = \"Optimal\",\n                               \"suboptimal\" = \"Suboptimal\",\n                               \"low-virulence\" = \"Low-Virulence\")\n  )  \n\ndaily_Re$preclinical &lt;- ordered(factor(daily_Re$preclinical), \n                                      c(\"None\", \"1 Day\", \"2 Days\", \"3 Days\", \"6 Days\"))\n\n## Assign colors\nmyCols &lt;- kelly()\n\n## Plot data\nggplot(daily_Re, aes(infect_day, q50, group = preclinical, col = preclinical)) +\n  geom_hline(yintercept = 1, col=\"black\", linewidth=0.5, linetype = \"dashed\") +\n  geom_smooth(method = \"loess\", span=0.05, se=FALSE) +\n  scale_color_manual(values = c(\n    \"None\" = myCols[3],\n    \"1 Day\" = myCols[4],\n    \"2 Days\" = myCols[6],\n    \"3 Days\" = myCols[7],\n    \"6 Days\" = myCols[10]\n    )) +\n  facet_wrap(~ scenario_type, ncol=1) +\n  labs(\n    x = \"Simulation Day\",\n    y = \"Median Effective Reproduction (Re)\",\n    col = \"Preclinical Duration\",\n    title = \" \"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.margin    = unit(c(0.25, 0.25, 0.25, 0.25), \"cm\"),\n    legend.position = \"bottom\",\n    strip.text     = element_text(size = 18, face = \"bold\", color = \"gray40\"),\n    axis.title.x   = element_text(size = 22, face = \"bold\"),\n    axis.title.y   = element_text(size = 20, face = \"bold\"),\n    axis.text.x    = element_text(size = 18, face = \"bold\"),\n    axis.text.y    = element_text(size = 18, face = \"bold\"),\n    legend.key.width = unit(3, \"line\"),\n    legend.key.height = unit(1, \"line\"),\n    legend.text = element_text(size = 16, face = \"bold\"),\n    legend.title = element_text(size = 18, face = \"bold\"),\n    plot.title     = element_text(size = 22, face = \"bold\", hjust = 0.5)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n## Prepare data\ndaily_Re &lt;- daily_Re_eastern %&gt;%\n  mutate(\n    preclinical = recode(preclinical,\n                               \"0\" = \"None\",\n                               \"1\" = \"1 Day\",\n                               \"2\" = \"2 Days\",\n                               \"3\" = \"3 Days\",\n                               \"6\" = \"6 Days\")\n  ) %&gt;%\n  mutate(\n    scenario_type = recode(scenario_type,\n                               \"optimal\" = \"Optimal\",\n                               \"suboptimal\" = \"Suboptimal\",\n                               \"low-virulence\" = \"Low-Virulence\")\n  ) \n\ndaily_Re$preclinical &lt;- ordered(factor(daily_Re$preclinical), \n                                      c(\"None\", \"1 Day\", \"2 Days\", \"3 Days\", \"6 Days\"))\n\n## Assign colors\nmyCols &lt;- kelly()\n\n## Plot data\nggplot(daily_Re, aes(infect_day, q50, group = preclinical, col = preclinical)) +\n  geom_hline(yintercept = 1, col=\"black\", linewidth=0.5, linetype = \"dashed\") +\n  geom_smooth(method = \"loess\", span=0.05, se=FALSE) +\n  scale_color_manual(values = c(\n    \"None\" = myCols[3],\n    \"1 Day\" = myCols[4],\n    \"2 Days\" = myCols[6],\n    \"3 Days\" = myCols[7],\n    \"6 Days\" = myCols[10]\n    )) +\n  facet_wrap(~ scenario_type, ncol=1) +\n  labs(\n    x = \"Simulation Day\",\n    y = \"Median Effective Reproduction (Re)\",\n    col = \"Preclinical Duration\",\n    title = \" \"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.margin    = unit(c(0.25, 0.25, 0.25, 0.25), \"cm\"),\n    legend.position = \"bottom\",\n    strip.text     = element_text(size = 18, face = \"bold\", color = \"gray40\"),\n    axis.title.x   = element_text(size = 22, face = \"bold\"),\n    axis.title.y   = element_text(size = 20, face = \"bold\"),\n    axis.text.x    = element_text(size = 18, face = \"bold\"),\n    axis.text.y    = element_text(size = 18, face = \"bold\"),\n    legend.key.width = unit(3, \"line\"),\n    legend.key.height = unit(1, \"line\"),\n    legend.text = element_text(size = 16, face = \"bold\"),\n    legend.title = element_text(size = 18, face = \"bold\"),\n    plot.title     = element_text(size = 22, face = \"bold\", hjust = 0.5)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nExample code demonstrates the workflow for the Eastern U.S. region. Central U.S. figures are included in the regional panels below. Select the tabs to view regional comparisons."
  },
  {
    "objectID": "spread.html#effective-reproduction",
    "href": "spread.html#effective-reproduction",
    "title": "Transmission Metrics",
    "section": "",
    "text": "The Effective Reproduction Number (Re) is the average number of secondary premises infected by a source per day. Re is used to estimate epidemic potential.\n\n\nCode\n## exclude index cases (source == 0)\ntransmissions &lt;- merge %&gt;% \n  filter(source != 0)\n\n## find the number of transmissions per source for each iteration and infect_day,\niteration_Re &lt;- transmissions %&gt;%\n  group_by(region, scenario_type, preclinical, iteration, infect_day, source) %&gt;%\n  summarize(num_transmissions = n(), .groups = \"drop\") %&gt;%\n  group_by(region, scenario_type, preclinical, iteration, infect_day) %&gt;%\n  summarize(Re = mean(num_transmissions), .groups = \"drop\")\n\n## summarize daily Re across iterations\ndaily_Re_summary &lt;- iteration_Re %&gt;%\n  group_by(region, scenario_type, preclinical, infect_day) %&gt;%\n  summarize(\n    mean = mean(Re, na.rm = TRUE),\n    q05 = quantile(Re, probs = 0.05, na.rm = TRUE),\n    q25 = quantile(Re, probs = 0.25, na.rm = TRUE),\n    q50 = quantile(Re, probs = 0.50, na.rm = TRUE),\n    q75 = quantile(Re, probs = 0.75, na.rm = TRUE),\n    q95 = quantile(Re, probs = 0.95, na.rm = TRUE),\n    .groups   = \"drop\")\n\n## Daily summary\ndaily_Re &lt;- daily_Re_summary %&gt;%\n  group_by(region, scenario_type, preclinical) %&gt;%\n  complete(infect_day = 10:365, \n            fill = list(mean = 0, q05 = 0, \n                        q25 = 0, q50 = 0, q75 = 0, q95 = 0)) %&gt;%\n  ungroup()\n\n\n\n\n\nCentral U.S.Eastern U.S.\n\n\nView subset of daily Re summary\n\n\nCode\n## Filter to central region\ndaily_Re_central &lt;- daily_Re %&gt;%\n  filter(region == \"central\")\n\n## Filter to scenario\ndaily_Re_central_select &lt;- daily_Re_central %&gt;%\n  filter(scenario_type == \"suboptimal\") %&gt;%\n  filter(preclinical == \"3\")\n\n## Select and order columns to display\ndaily_Re_central_select &lt;- daily_Re_central_select[c(\"infect_day\", \"mean\", \"q05\", \"q25\", \"q50\", \"q75\", \"q95\")]\n\nhead(daily_Re_central_select)\n\n\n\n\n\n\ninfect_day\nmean\nq05\nq25\nq50\nq75\nq95\n\n\n\n\n10\n0.000000\n0\n0\n0\n0\n0.000\n\n\n11\n2.155172\n1\n1\n2\n3\n4.150\n\n\n12\n1.771429\n1\n1\n1\n2\n4.000\n\n\n13\n1.955095\n1\n1\n1\n2\n5.000\n\n\n14\n1.945014\n1\n1\n1\n2\n5.425\n\n\n15\n1.886877\n1\n1\n1\n2\n5.000\n\n\n\n\n\n\n\n\nView subset of daily Re summary\n\n\nCode\n## Filter to eastern region\ndaily_Re_eastern &lt;- daily_Re %&gt;%\n  filter(region == \"eastern\")\n\n## Filter to scenario\ndaily_Re_eastern_select &lt;- daily_Re_eastern %&gt;%\n  filter(scenario_type == \"suboptimal\") %&gt;%\n  filter(preclinical == \"3\")\n\n## Select and order columns to display\ndaily_Re_eastern_select &lt;- daily_Re_eastern_select[c(\"infect_day\", \"mean\", \"q05\", \"q25\", \"q50\", \"q75\", \"q95\")]\n\nhead(daily_Re_eastern_select)\n\n\n\n\n\n\ninfect_day\nmean\nq05\nq25\nq50\nq75\nq95\n\n\n\n\n10\n0.000000\n0\n0\n0\n0.000\n0.0\n\n\n11\n2.153846\n1\n1\n2\n3.000\n4.0\n\n\n12\n1.971014\n1\n1\n2\n3.000\n4.6\n\n\n13\n2.043243\n1\n1\n1\n3.000\n5.0\n\n\n14\n1.878851\n1\n1\n1\n2.375\n4.5\n\n\n15\n2.013787\n1\n1\n1\n3.000\n5.0\n\n\n\n\n\n\n\n\n\n\n\n\nThe dashed line is at Re = 1\n\nCentral U.S.Eastern U.S.\n\n\n\n\nCode\n## Prepare data\ndaily_Re &lt;- daily_Re_central %&gt;%\n  mutate(\n    preclinical = recode(preclinical,\n                               \"0\" = \"None\",\n                               \"1\" = \"1 Day\",\n                               \"2\" = \"2 Days\",\n                               \"3\" = \"3 Days\",\n                               \"6\" = \"6 Days\")\n  ) %&gt;%\n  mutate(\n    scenario_type = recode(scenario_type,\n                               \"optimal\" = \"Optimal\",\n                               \"suboptimal\" = \"Suboptimal\",\n                               \"low-virulence\" = \"Low-Virulence\")\n  )  \n\ndaily_Re$preclinical &lt;- ordered(factor(daily_Re$preclinical), \n                                      c(\"None\", \"1 Day\", \"2 Days\", \"3 Days\", \"6 Days\"))\n\n## Assign colors\nmyCols &lt;- kelly()\n\n## Plot data\nggplot(daily_Re, aes(infect_day, q50, group = preclinical, col = preclinical)) +\n  geom_hline(yintercept = 1, col=\"black\", linewidth=0.5, linetype = \"dashed\") +\n  geom_smooth(method = \"loess\", span=0.05, se=FALSE) +\n  scale_color_manual(values = c(\n    \"None\" = myCols[3],\n    \"1 Day\" = myCols[4],\n    \"2 Days\" = myCols[6],\n    \"3 Days\" = myCols[7],\n    \"6 Days\" = myCols[10]\n    )) +\n  facet_wrap(~ scenario_type, ncol=1) +\n  labs(\n    x = \"Simulation Day\",\n    y = \"Median Effective Reproduction (Re)\",\n    col = \"Preclinical Duration\",\n    title = \" \"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.margin    = unit(c(0.25, 0.25, 0.25, 0.25), \"cm\"),\n    legend.position = \"bottom\",\n    strip.text     = element_text(size = 18, face = \"bold\", color = \"gray40\"),\n    axis.title.x   = element_text(size = 22, face = \"bold\"),\n    axis.title.y   = element_text(size = 20, face = \"bold\"),\n    axis.text.x    = element_text(size = 18, face = \"bold\"),\n    axis.text.y    = element_text(size = 18, face = \"bold\"),\n    legend.key.width = unit(3, \"line\"),\n    legend.key.height = unit(1, \"line\"),\n    legend.text = element_text(size = 16, face = \"bold\"),\n    legend.title = element_text(size = 18, face = \"bold\"),\n    plot.title     = element_text(size = 22, face = \"bold\", hjust = 0.5)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n## Prepare data\ndaily_Re &lt;- daily_Re_eastern %&gt;%\n  mutate(\n    preclinical = recode(preclinical,\n                               \"0\" = \"None\",\n                               \"1\" = \"1 Day\",\n                               \"2\" = \"2 Days\",\n                               \"3\" = \"3 Days\",\n                               \"6\" = \"6 Days\")\n  ) %&gt;%\n  mutate(\n    scenario_type = recode(scenario_type,\n                               \"optimal\" = \"Optimal\",\n                               \"suboptimal\" = \"Suboptimal\",\n                               \"low-virulence\" = \"Low-Virulence\")\n  ) \n\ndaily_Re$preclinical &lt;- ordered(factor(daily_Re$preclinical), \n                                      c(\"None\", \"1 Day\", \"2 Days\", \"3 Days\", \"6 Days\"))\n\n## Assign colors\nmyCols &lt;- kelly()\n\n## Plot data\nggplot(daily_Re, aes(infect_day, q50, group = preclinical, col = preclinical)) +\n  geom_hline(yintercept = 1, col=\"black\", linewidth=0.5, linetype = \"dashed\") +\n  geom_smooth(method = \"loess\", span=0.05, se=FALSE) +\n  scale_color_manual(values = c(\n    \"None\" = myCols[3],\n    \"1 Day\" = myCols[4],\n    \"2 Days\" = myCols[6],\n    \"3 Days\" = myCols[7],\n    \"6 Days\" = myCols[10]\n    )) +\n  facet_wrap(~ scenario_type, ncol=1) +\n  labs(\n    x = \"Simulation Day\",\n    y = \"Median Effective Reproduction (Re)\",\n    col = \"Preclinical Duration\",\n    title = \" \"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.margin    = unit(c(0.25, 0.25, 0.25, 0.25), \"cm\"),\n    legend.position = \"bottom\",\n    strip.text     = element_text(size = 18, face = \"bold\", color = \"gray40\"),\n    axis.title.x   = element_text(size = 22, face = \"bold\"),\n    axis.title.y   = element_text(size = 20, face = \"bold\"),\n    axis.text.x    = element_text(size = 18, face = \"bold\"),\n    axis.text.y    = element_text(size = 18, face = \"bold\"),\n    legend.key.width = unit(3, \"line\"),\n    legend.key.height = unit(1, \"line\"),\n    legend.text = element_text(size = 16, face = \"bold\"),\n    legend.title = element_text(size = 18, face = \"bold\"),\n    plot.title     = element_text(size = 22, face = \"bold\", hjust = 0.5)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nExample code demonstrates the workflow for the Eastern U.S. region. Central U.S. figures are included in the regional panels below. Select the tabs to view regional comparisons."
  },
  {
    "objectID": "spread.html#epidemic-velocity",
    "href": "spread.html#epidemic-velocity",
    "title": "Transmission Metrics",
    "section": "Epidemic Velocity",
    "text": "Epidemic Velocity\nThe epidemic velocity is the distance (km) of spread per day. The epidemic velocity is estimated by first calculating the daily spread distances.\n\nCalculate Daily Distances\ncompile_daily_summary() calculates distances (km) between source farms and those infected for each iteration, then calculates the percentiles by day across all iterations to get the average statistics.\n\n\nCode\ndaily_summary &lt;- compile_daily_summary(region_paths, reference)\n\n\n\n\nCompare Scenarios\nDrop the low-virulence scenario from combined_summary and calculate quantiles\n\n\nCode\ndaily_all &lt;- daily_summary$combined_summary\n\ndaily_quants &lt;- daily_summary$combined_summary %&gt;%\n  filter(scenario != \"low-virulence/6-days-preclinical\")\n\n\nCompare percentiles across all scenarios and prepare to calculate wave velocity\n\n\nCode\nmy_summary_compare &lt;- daily_quants %&gt;%\n  mutate(\n    scenario_type = str_to_title(word(scenario, 1, sep = \"/\")),\n    preclinical = word(scenario, 2, sep = \"/\") %&gt;% \n      str_replace_all(\"-days?-preclinical\", \"\") %&gt;% \n      str_trim() %&gt;% \n      paste(\"Days Preclinical\", .) %&gt;% \n      str_to_title()\n  )\n\nall_summary_compare &lt;- daily_all %&gt;%\n  mutate(\n    scenario_type = str_to_title(word(scenario, 1, sep = \"/\")),\n    preclinical = word(scenario, 2, sep = \"/\") %&gt;% \n      str_replace_all(\"-days?-preclinical\", \"\") %&gt;% \n      str_trim() %&gt;% \n      paste(\"Days Preclinical\", .) %&gt;% \n      str_to_title()\n  )\n\n\n\n\nPlot Epidemic Velocity\n\nCentral U.S.Eastern U.S.\n\n\n\n\nCode\nall_summary_compare &lt;- all_summary_compare_central %&gt;%\n  mutate(\n    preclinical = recode(preclinical,\n                               \"Days Preclinical 0\" = \"None\",\n                               \"Days Preclinical 1\" = \"1 Day\",\n                               \"Days Preclinical 2\" = \"2 Days\",\n                               \"Days Preclinical 3\" = \"3 Days\",\n                               \"Days Preclinical 6\" = \"6 Days\")\n  )\n\nall_summary_compare$scenario_type &lt;- ordered(factor(all_summary_compare$scenario_type), \n                                      c(\"Optimal\", \"Suboptimal\", \"Low-Virulence\"))\n\nall_summary_compare$preclinical &lt;- ordered(factor(all_summary_compare$preclinical), \n                                      c(\"None\", \"1 Day\", \"2 Days\", \"3 Days\", \"6 Days\"))\n\nmyCols &lt;- kelly()\n\nggplot(all_summary_compare, aes(infect_day, log(q50), \n                               group = scenario, col = preclinical)) +\n  geom_line(linewidth = 0.4) +\n  ylim(0, 6) +\n  scale_color_manual(values = c(\n    \"None\" = myCols[3],\n    \"1 Day\" = myCols[4],\n    \"2 Days\" = myCols[6],\n    \"3 Days\" = myCols[7],\n    \"6 Days\" = myCols[10]\n    )) +\n  facet_wrap(~ scenario_type, ncol=1) +\n  labs(\n    x = \"Simulation Day\",\n    y = \"Distance (log km)\",\n    col = \"Preclinical Infectious Duration\",\n    title = \" \"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.margin    = unit(c(0.25, 0.25, 0.25, 0.25), \"cm\"),\n    legend.position = \"bottom\",\n    strip.text     = element_text(size = 18, face = \"bold\", color = \"gray40\"),\n    axis.title.x   = element_text(size = 22, face = \"bold\"),\n    axis.title.y   = element_text(size = 22, face = \"bold\"),\n    axis.text.x    = element_text(size = 18, face = \"bold\"),\n    axis.text.y    = element_text(size = 18, face = \"bold\"),\n    legend.key.width = unit(3, \"line\"),\n    legend.key.height = unit(1, \"line\"),\n    legend.text = element_text(size = 16, face = \"bold\"),\n    legend.title = element_text(size = 18, face = \"bold\"),\n    plot.title     = element_text(size = 22, face = \"bold\", hjust = 0.5)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nall_summary_compare &lt;- all_summary_compare %&gt;%\n  mutate(\n    preclinical = recode(preclinical,\n                               \"Days Preclinical 0\" = \"None\",\n                               \"Days Preclinical 1\" = \"1 Day\",\n                               \"Days Preclinical 2\" = \"2 Days\",\n                               \"Days Preclinical 3\" = \"3 Days\",\n                               \"Days Preclinical 6\" = \"6 Days\")\n  )\n\nall_summary_compare$scenario_type &lt;- ordered(factor(all_summary_compare$scenario_type), \n                                      c(\"Optimal\", \"Suboptimal\", \"Low-Virulence\"))\n\nall_summary_compare$preclinical &lt;- ordered(factor(all_summary_compare$preclinical), \n                                      c(\"None\", \"1 Day\", \"2 Days\", \"3 Days\", \"6 Days\"))\n\nmyCols &lt;- kelly()\n\nggplot(all_summary_compare, aes(infect_day, log(q50), \n                               group = scenario, col = preclinical)) +\n  geom_line(linewidth = 0.4) +\n  ylim(0, 6) +\n  scale_color_manual(values = c(\n    \"None\" = myCols[3],\n    \"1 Day\" = myCols[4],\n    \"2 Days\" = myCols[6],\n    \"3 Days\" = myCols[7],\n    \"6 Days\" = myCols[10]\n    )) +\n  facet_wrap(~ scenario_type, ncol=1) +\n  labs(\n    x = \"Simulation Day\",\n    y = \"Distance (log km)\",\n    col = \"Preclinical Infectious Duration\",\n    title = \" \"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.margin    = unit(c(0.25, 0.25, 0.25, 0.25), \"cm\"),\n    legend.position = \"bottom\",\n    strip.text     = element_text(size = 18, face = \"bold\", color = \"gray40\"),\n    axis.title.x   = element_text(size = 22, face = \"bold\"),\n    axis.title.y   = element_text(size = 22, face = \"bold\"),\n    axis.text.x    = element_text(size = 18, face = \"bold\"),\n    axis.text.y    = element_text(size = 18, face = \"bold\"),\n    legend.key.width = unit(3, \"line\"),\n    legend.key.height = unit(1, \"line\"),\n    legend.text = element_text(size = 16, face = \"bold\"),\n    legend.title = element_text(size = 18, face = \"bold\"),\n    plot.title     = element_text(size = 22, face = \"bold\", hjust = 0.5)\n  )"
  },
  {
    "objectID": "spread.html#iteration-metrics",
    "href": "spread.html#iteration-metrics",
    "title": "Transmission Metrics",
    "section": "Iteration Metrics",
    "text": "Iteration Metrics\nCompare scenarios by looking for patterns at the level of individual iterations. iteration_metrics() will use the other output in daily_summary to look at trends between optimal and suboptimal responses.\nThe function returns iteration specific metrics:\n\nauc_log\n\nThe amount of area (total) under the plotted line (distance x day) above on a log scale, i.e., the Area Under Curve (AUC). This represents the total distance covered during the outbreak`s spread (on the log scale).\n\npeak_spread\n\nThe maximum distance spread in any one day (log scale).\n\npeak_day\n\nThe infect day that the maximum spread distance (peak_spread) occurred.\n\n\n\n\nCode\n## Calculate daily iteration metrics\niteration_metrics &lt;- iteration_metrics(daily_summary$daily_distances) %&gt;%\n  select(-c(scenario))\n\n## Capitalize scenario labels\niteration_metrics$scenario_type &lt;- str_to_title(iteration_metrics$scenario_type)\n\n## Order scenario levels\niteration_metrics$scenario_type &lt;- ordered(factor(iteration_metrics$scenario_type), \n                                      c(\"Optimal\",\"Suboptimal\", \"Low-virulence\"))\n\n\nView sample of iteration metrics\n\n\nCode\n## Filter data to scenario\niteration_metrics_select &lt;- iteration_metrics %&gt;%\n  filter(scenario_type == \"Suboptimal\") %&gt;%\n  filter(preclinical == \"3\")\n\n## Select and order columns to display\niteration_metrics_select &lt;- iteration_metrics_select[c(\"iteration\", \"auc_log\", \"peak_spread\", \"peak_day\")]\n\nhead(iteration_metrics_select)\n\n\n\n\n\n\niteration\nauc_log\npeak_spread\npeak_day\n\n\n\n\n1\n57.56127\n5.302539\n18\n\n\n2\n231.03620\n5.451650\n25\n\n\n3\n901.49964\n5.527616\n89\n\n\n4\n162.08489\n7.021728\n36\n\n\n5\n244.14070\n5.940245\n12\n\n\n6\n197.69113\n5.667478\n56"
  },
  {
    "objectID": "spread.html#cumulative-spread",
    "href": "spread.html#cumulative-spread",
    "title": "Transmission Metrics",
    "section": "Cumulative Spread",
    "text": "Cumulative Spread\nDrop the low-virulence scenarios to compare optimal and suboptimal detection scenarios. Plot the estimated Area Under the Curve (AUC). auc_log represents the total cumulative spread distance, for each scenario by iteration, on a log scale.\n\n\nCode\n## Drop the low-virulence scenario\niteration_metrics_no_low &lt;- iteration_metrics %&gt;%\n  filter(scenario_type != \"Low-Virulence\")\n\n## Plot AUC\nggplot(iteration_metrics_no_low, \n       aes(x = preclinical, y = auc_log, color = scenario_type)) +\n  geom_point(shape=1, alpha = 0.3, size = 2) + # individual iterations\n  geom_smooth(method = \"lm\", se = FALSE, linewidth=1.2) + # trend\n  facet_grid(. ~ scenario_type) +\n  scale_color_manual(values = c(\"Suboptimal\" = \"#74add1\", \"Optimal\" = \"orange2\")) +\n  labs(\n    x = \"Preclinical Infectious Duration (days)\",\n    y = \"Cumulative Spread (log AUC)\",\n    title = \" \"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.margin    = unit(c(0.25, 0.25, 0.25, 0.25), \"cm\"),\n    legend.position = \"none\",\n    strip.text     = element_text(size = 18, face = \"bold\", color = \"gray40\"),\n    axis.title.x   = element_text(size = 22, face = \"bold\"),\n    axis.title.y   = element_text(size = 22, face = \"bold\"),\n    axis.text.x    = element_text(size = 18, face = \"bold\"),\n    axis.text.y    = element_text(size = 18, face = \"bold\"),\n    plot.title     = element_text(size = 22, face = \"bold\", hjust = 0.5)\n  )\n\n\n\n\n\n\n\n\n\n\nSignificance Test\nFit a linear model with an interaction term to quantify the influence of preclinical infectious duration (preclinical) and detection scenario (scenario_type) on cumulative outbreak spread (auc_log).\n\nLinear Model\n\n\nCode\nmodel_auc &lt;- lm(auc_log ~ preclinical * scenario_type, data = iteration_metrics_no_low)\n\nsummary(model_auc)\n\n\n\nCall:\nlm(formula = auc_log ~ preclinical * scenario_type, data = iteration_metrics_no_low)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-316.97  -79.18  -28.81   47.52  855.07 \n\nCoefficients:\n                            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                   78.708      4.674  16.840  &lt; 2e-16 ***\npreclinical                   45.739      2.373  19.276  &lt; 2e-16 ***\nscenario_type.L               48.654      6.610   7.361 2.28e-13 ***\npreclinical:scenario_type.L   32.891      3.356   9.802  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 150.3 on 3429 degrees of freedom\n  (280 observations deleted due to missingness)\nMultiple R-squared:  0.2637,    Adjusted R-squared:  0.263 \nF-statistic: 409.3 on 3 and 3429 DF,  p-value: &lt; 2.2e-16\n\n\n\n\nANOVA\n\n\nCode\nanova(model_auc)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\npreclinical\n1\n8014986\n8014986.44\n354.99578\n0\n\n\nscenario_type\n1\n17537524\n17537523.84\n776.76326\n0\n\n\npreclinical:scenario_type\n1\n2169123\n2169123.39\n96.07373\n0\n\n\nResiduals\n3429\n77418915\n22577.69\nNA\nNA"
  },
  {
    "objectID": "spread.html#peak-spread",
    "href": "spread.html#peak-spread",
    "title": "Transmission Metrics",
    "section": "Peak Spread",
    "text": "Peak Spread\nAs with cumulative spread above, comparisons can be made using the peak spread rates.\n\n\nCode\nggplot(iteration_metrics_no_low, aes(x = preclinical, y = peak_day, color = scenario_type)) +\n  geom_point(shape=1, alpha = 0.3, size = 2) + # individual iterations\n  geom_smooth(method = \"lm\", se = FALSE, linewidth=1.2) +\n  facet_grid(. ~ scenario_type) +\n  scale_color_manual(values = c(\"Suboptimal\" = \"#74add1\", \"Optimal\" = \"orange2\")) +\n  labs(\n    x = \"Preclinical Infectious Duration (days)\",\n    y = \"Day of Peak Transmission\",\n    title = \" \"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.margin    = unit(c(0.25, 0.25, 0.25, 0.25), \"cm\"),\n    legend.position = \"none\",\n    strip.text     = element_text(size = 18, face = \"bold\", color = \"gray40\"),\n    axis.title.x   = element_text(size = 22, face = \"bold\"),\n    axis.title.y   = element_text(size = 22, face = \"bold\"),\n    axis.text.x    = element_text(size = 18, face = \"bold\"),\n    axis.text.y    = element_text(size = 18, face = \"bold\"),\n    plot.title     = element_text(size = 22, face = \"bold\", hjust = 0.5)\n  )\n\n\n\n\n\n\n\n\n\n\nSignificance Test\nFit a linear model with an interaction term to quantify the influence of preclinical and scenario_type on the maximum spread rate and it’s (peak_day).\n\nLinear Model\n\n\nCode\nmodel_peak &lt;- lm(peak_day ~ preclinical * scenario_type, data = iteration_metrics_no_low)\n\nsummary(model_peak)\n\n\n\nCall:\nlm(formula = peak_day ~ preclinical * scenario_type, data = iteration_metrics_no_low)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-43.909 -13.940  -6.919   5.852 287.081 \n\nCoefficients:\n                            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                  26.3329     0.8619  30.553  &lt; 2e-16 ***\npreclinical                   4.7061     0.4506  10.444  &lt; 2e-16 ***\nscenario_type.L               6.5160     1.2189   5.346 9.54e-08 ***\npreclinical:scenario_type.L   4.6434     0.6373   7.286 3.87e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 30.38 on 3709 degrees of freedom\nMultiple R-squared:  0.1263,    Adjusted R-squared:  0.1256 \nF-statistic: 178.7 on 3 and 3709 DF,  p-value: &lt; 2.2e-16\n\n\n\n\nANOVA\n\n\nCode\nanova(model_peak)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\npreclinical\n1\n97130.83\n97130.8281\n105.25678\n0\n\n\nscenario_type\n1\n348554.42\n348554.4173\n377.71442\n0\n\n\npreclinical:scenario_type\n1\n48993.79\n48993.7929\n53.09261\n0\n\n\nResiduals\n3709\n3422660.79\n922.7988\nNA\nNA"
  },
  {
    "objectID": "infections.html",
    "href": "infections.html",
    "title": "Outbreak Magnitude",
    "section": "",
    "text": "summarize_infections() summarizes infection metrics by iteration.\n\n\nCode\n## Summarize infection metrics for each iteration\ninfect_summary &lt;- summarize_infections(infection)\n\n\nView a subset of infect_summary\n\n\nCode\n## Filter data to scenario\ninfect_summary_select &lt;- infect_summary %&gt;%\n  filter(region == \"central\") %&gt;%\n  filter(scenario_type == \"suboptimal\") %&gt;%\n  filter(preclinical == 2)\n\n## Select and order columns to display\ninfect_summary_select &lt;- infect_summary_select[c(\"iteration\", \"farms_infected\", \"cattle_infected\", \"first_infect\", \"last_infect\")]\n\n## Check data\nhead(infect_summary_select)\n\n\n\n\n\n\niteration\nfarms_infected\ncattle_infected\nfirst_infect\nlast_infect\n\n\n\n\n1\n82\n18980\n10\n54\n\n\n2\n13\n4893\n10\n27\n\n\n3\n179\n51364\n10\n85\n\n\n4\n10\n2271\n10\n36\n\n\n5\n20\n6115\n10\n42\n\n\n6\n116\n54607\n10\n111\n\n\n\n\n\n\n\n\ngenerate_infect_statistics() returns summary statistics for each modeling scenario. Results are grouped by region, scenario_type, and preclinical. The output is filtered by summary and region to compare farms_infected and cattle_infected between scenarios.\n\n\nCode\ninfect_config_summary &lt;- generate_infect_statistics(infect_summary)\n\n## Filter to farms\nfarms_inf_summary &lt;- infect_config_summary %&gt;%    \n  filter(summary == \"farms_infected\")\n\n## Filter to cattle\ncattle_inf_summary &lt;- infect_config_summary %&gt;%    \n  filter(summary == \"cattle_infected\")"
  },
  {
    "objectID": "infections.html#infection-summary",
    "href": "infections.html#infection-summary",
    "title": "Outbreak Magnitude",
    "section": "",
    "text": "summarize_infections() summarizes infection metrics by iteration.\n\n\nCode\n## Summarize infection metrics for each iteration\ninfect_summary &lt;- summarize_infections(infection)\n\n\nView a subset of infect_summary\n\n\nCode\n## Filter data to scenario\ninfect_summary_select &lt;- infect_summary %&gt;%\n  filter(region == \"central\") %&gt;%\n  filter(scenario_type == \"suboptimal\") %&gt;%\n  filter(preclinical == 2)\n\n## Select and order columns to display\ninfect_summary_select &lt;- infect_summary_select[c(\"iteration\", \"farms_infected\", \"cattle_infected\", \"first_infect\", \"last_infect\")]\n\n## Check data\nhead(infect_summary_select)\n\n\n\n\n\n\niteration\nfarms_infected\ncattle_infected\nfirst_infect\nlast_infect\n\n\n\n\n1\n82\n18980\n10\n54\n\n\n2\n13\n4893\n10\n27\n\n\n3\n179\n51364\n10\n85\n\n\n4\n10\n2271\n10\n36\n\n\n5\n20\n6115\n10\n42\n\n\n6\n116\n54607\n10\n111\n\n\n\n\n\n\n\n\ngenerate_infect_statistics() returns summary statistics for each modeling scenario. Results are grouped by region, scenario_type, and preclinical. The output is filtered by summary and region to compare farms_infected and cattle_infected between scenarios.\n\n\nCode\ninfect_config_summary &lt;- generate_infect_statistics(infect_summary)\n\n## Filter to farms\nfarms_inf_summary &lt;- infect_config_summary %&gt;%    \n  filter(summary == \"farms_infected\")\n\n## Filter to cattle\ncattle_inf_summary &lt;- infect_config_summary %&gt;%    \n  filter(summary == \"cattle_infected\")"
  },
  {
    "objectID": "infections.html#infected-farms",
    "href": "infections.html#infected-farms",
    "title": "Outbreak Magnitude",
    "section": "Infected Farms",
    "text": "Infected Farms\nThe number of infected farms\n\nCentral U.S.Eastern U.S.\n\n\n\n\nCode\n## Filter to central region\nfarms_central_summary &lt;- farms_inf_summary %&gt;%\n  filter(region == \"central\")\n\n## Select and order columns\nfarms_central_summary &lt;- farms_central_summary[c(\"scenario_type\", \"preclinical\", \"mean\", \"q05\", \"q25\", \"q50\", \"q75\", \"q95\")]\n\nfarms_central_summary\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nscenario_type\npreclinical\nmean\nq05\nq25\nq50\nq75\nq95\n\n\n\n\noptimal\n0\n7.352\n2.0\n2.00\n3.0\n6.00\n20.05\n\n\noptimal\n1\n12.714\n2.0\n3.00\n5.0\n11.00\n56.00\n\n\noptimal\n2\n23.366\n2.0\n4.00\n9.0\n22.00\n94.00\n\n\noptimal\n3\n72.506\n3.0\n7.00\n15.5\n67.00\n372.35\n\n\nsuboptimal\n0\n46.924\n4.0\n9.00\n22.0\n55.25\n176.05\n\n\nsuboptimal\n1\n106.394\n6.0\n15.00\n41.0\n140.25\n408.15\n\n\nsuboptimal\n2\n250.570\n7.0\n24.00\n81.0\n369.75\n939.20\n\n\nsuboptimal\n3\n578.078\n9.0\n45.75\n312.5\n1008.25\n1729.50\n\n\nlow-virulence\n6\n3722.938\n1491.7\n3034.50\n3917.0\n4595.00\n5520.00\n\n\n\n\n\n\n\n\n\n\nCode\n## Filter to eastern region\nfarms_eastern_summary &lt;- farms_inf_summary %&gt;%\n  filter(region == \"eastern\")\n\n## Select and order columns\nfarms_eastern_summary &lt;- farms_eastern_summary[c(\"scenario_type\", \"preclinical\", \"mean\", \"q05\", \"q25\", \"q50\", \"q75\", \"q95\")]\n\nfarms_eastern_summary\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nscenario_type\npreclinical\nmean\nq05\nq25\nq50\nq75\nq95\n\n\n\n\noptimal\n0\n6.564\n2.00\n2.00\n4.0\n7.00\n20.05\n\n\noptimal\n1\n13.590\n2.00\n3.00\n6.0\n13.00\n57.05\n\n\noptimal\n2\n30.400\n2.00\n5.00\n10.0\n26.00\n124.05\n\n\noptimal\n3\n54.782\n2.00\n7.00\n15.0\n61.25\n237.10\n\n\nsuboptimal\n0\n41.674\n4.00\n10.00\n21.0\n51.00\n134.05\n\n\nsuboptimal\n1\n89.450\n5.00\n16.00\n41.0\n94.75\n330.70\n\n\nsuboptimal\n2\n186.164\n6.00\n26.00\n74.0\n268.25\n684.10\n\n\nsuboptimal\n3\n457.092\n9.00\n43.00\n250.5\n655.50\n1620.15\n\n\nlow-virulence\n6\n3101.590\n61.85\n2435.75\n3412.5\n4187.25\n4993.10"
  },
  {
    "objectID": "infections.html#total-cattle",
    "href": "infections.html#total-cattle",
    "title": "Outbreak Magnitude",
    "section": "Total Cattle",
    "text": "Total Cattle\nThe total number of cattle on infected farms\n\nCentral U.S.Eastern U.S.\n\n\n\n\nCode\n## Filter to central region\ncattle_central_summary &lt;- cattle_inf_summary %&gt;%\n  filter(region == \"central\")\n\n## Select and order columns\ncattle_central_summary &lt;- cattle_central_summary[c(\"scenario_type\", \"preclinical\", \"mean\", \"q05\", \"q25\", \"q50\", \"q75\", \"q95\")]\n\ncattle_central_summary\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nscenario_type\npreclinical\nmean\nq05\nq25\nq50\nq75\nq95\n\n\n\n\noptimal\n0\n4347.228\n1627.00\n1627.00\n1708.5\n2899.25\n13058.80\n\n\noptimal\n1\n7215.244\n1627.00\n1675.75\n2089.5\n6008.25\n30945.40\n\n\noptimal\n2\n13340.340\n1627.00\n1803.50\n3940.5\n11030.25\n51068.45\n\n\noptimal\n3\n44453.892\n1651.85\n2390.25\n7635.0\n33766.50\n233234.75\n\n\nsuboptimal\n0\n25979.990\n1755.60\n4074.25\n11906.5\n28267.75\n103639.20\n\n\nsuboptimal\n1\n62846.180\n1873.15\n7052.00\n18708.5\n72516.75\n275944.45\n\n\nsuboptimal\n2\n156362.888\n2106.40\n10801.75\n41477.5\n201033.25\n666540.50\n\n\nsuboptimal\n3\n455723.392\n2607.75\n20374.75\n167747.5\n666590.75\n1930262.85\n\n\nlow-virulence\n6\n3243921.747\n913215.30\n2260734.25\n3449833.0\n4241386.75\n5265010.15\n\n\n\n\n\n\n\n\n\n\nCode\n## Filter to eastern region\ncattle_eastern_summary &lt;- cattle_inf_summary %&gt;%\n  filter(region == \"eastern\")\n\n## Select and order columns\ncattle_eastern_summary &lt;- cattle_eastern_summary[c(\"scenario_type\", \"preclinical\", \"mean\", \"q05\", \"q25\", \"q50\", \"q75\", \"q95\")]\n\ncattle_eastern_summary\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nscenario_type\npreclinical\nmean\nq05\nq25\nq50\nq75\nq95\n\n\n\n\noptimal\n0\n2686.652\n1164.00\n1164.00\n1247.0\n2236.25\n8903.30\n\n\noptimal\n1\n5315.418\n1164.00\n1208.75\n1843.0\n4832.50\n21955.40\n\n\noptimal\n2\n11114.532\n1164.00\n1355.50\n2824.0\n8958.25\n47171.35\n\n\noptimal\n3\n17873.322\n1164.00\n1766.75\n4779.0\n21289.75\n79301.35\n\n\nsuboptimal\n0\n16142.812\n1267.80\n2524.25\n6678.5\n18888.50\n57099.95\n\n\nsuboptimal\n1\n31848.112\n1453.00\n4203.00\n13355.5\n33844.50\n126665.70\n\n\nsuboptimal\n2\n62893.166\n1606.45\n6739.00\n23120.0\n83048.75\n253791.15\n\n\nsuboptimal\n3\n153263.466\n1933.45\n13765.75\n74901.5\n215762.00\n601651.45\n\n\nlow-virulence\n6\n1019390.812\n14089.10\n799123.25\n1161486.0\n1366618.00\n1600987.95"
  },
  {
    "objectID": "infections.html#significance-test",
    "href": "infections.html#significance-test",
    "title": "Outbreak Magnitude",
    "section": "Significance Test",
    "text": "Significance Test\nPerform significance testing on optimal and suboptimal detection scenarios.\n\n\nCode\n## Filter out low virulence scenarios\nno_LV &lt;- infection %&gt;%\n  filter(scenario_type != \"low-virulence\")\n\nno_LV_summary &lt;- summarize_infections(no_LV)\n\n\n\nLinear Model\n\nCentral U.S.Eastern U.S.\n\n\n\n\nCode\n## Filter to central region\nno_LV_central_summary &lt;- no_LV_summary %&gt;%\n  filter(region == \"central\")\n\nmodel_central_cattle &lt;- lm(log(cattle_infected) ~ preclinical * scenario_type, \n                       data = no_LV_central_summary)\n\nsummary(model_central_cattle)\n\n\n\nCall:\nlm(formula = log(cattle_infected) ~ preclinical * scenario_type, \n    data = no_LV_central_summary)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-4.2343 -0.8894 -0.2982  1.0457  4.4918 \n\nCoefficients:\n                             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                   8.60372    0.04628 185.898  &lt; 2e-16 ***\npreclinical1                  0.46313    0.06545   7.076 1.75e-12 ***\npreclinical2                  1.01288    0.06545  15.475  &lt; 2e-16 ***\npreclinical3                  1.83846    0.06545  28.088  &lt; 2e-16 ***\nscenario_type.L               1.08133    0.06545  16.521  &lt; 2e-16 ***\npreclinical1:scenario_type.L  0.19539    0.09256   2.111   0.0348 *  \npreclinical2:scenario_type.L  0.39906    0.09256   4.311 1.66e-05 ***\npreclinical3:scenario_type.L  0.59686    0.09256   6.448 1.27e-10 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.464 on 3992 degrees of freedom\nMultiple R-squared:  0.4032,    Adjusted R-squared:  0.4022 \nF-statistic: 385.3 on 7 and 3992 DF,  p-value: &lt; 2.2e-16\n\n\n\n\n\n\nCode\n## Filter to eastern region\nno_LV_eastern_summary &lt;- no_LV_summary %&gt;%\n  filter(region == \"eastern\")\n\nmodel_eastern_cattle &lt;- lm(log(cattle_infected) ~ preclinical * scenario_type, \n                       data = no_LV_eastern_summary)\n\nsummary(model_eastern_cattle)\n\n\n\nCall:\nlm(formula = log(cattle_infected) ~ preclinical * scenario_type, \n    data = no_LV_eastern_summary)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.7779 -0.8537 -0.2152  0.9186  4.4417 \n\nCoefficients:\n                             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                   8.21104    0.04188 196.060  &lt; 2e-16 ***\npreclinical1                  0.47570    0.05923   8.032 1.25e-15 ***\npreclinical2                  0.95705    0.05923  16.159  &lt; 2e-16 ***\npreclinical3                  1.59329    0.05923  26.901  &lt; 2e-16 ***\nscenario_type.L               0.99160    0.05923  16.742  &lt; 2e-16 ***\npreclinical1:scenario_type.L  0.10213    0.08376   1.219  0.22280    \npreclinical2:scenario_type.L  0.21745    0.08376   2.596  0.00947 ** \npreclinical3:scenario_type.L  0.46956    0.08376   5.606 2.21e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.324 on 3992 degrees of freedom\nMultiple R-squared:  0.3794,    Adjusted R-squared:  0.3783 \nF-statistic: 348.6 on 7 and 3992 DF,  p-value: &lt; 2.2e-16\n\n\n\n\n\n\n\nANOVA\n\nCentral U.S.Eastern U.S.\n\n\n\n\nCode\nanova(model_central_cattle)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\npreclinical\n3\n1873.93075\n624.643584\n291.61346\n0\n\n\nscenario_type\n1\n3804.16224\n3804.162244\n1775.96463\n0\n\n\npreclinical:scenario_type\n3\n99.43042\n33.143473\n15.47296\n0\n\n\nResiduals\n3992\n8550.96743\n2.142026\nNA\nNA\n\n\n\n\n\n\n\n\n\n\nCode\nanova(model_eastern_cattle)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\npreclinical\n3\n1391.58709\n463.862363\n264.46615\n0e+00\n\n\nscenario_type\n1\n2826.86883\n2826.868825\n1611.70891\n0e+00\n\n\npreclinical:scenario_type\n3\n61.25672\n20.418906\n11.64162\n1e-07\n\n\nResiduals\n3992\n7001.79806\n1.753957\nNA\nNA"
  },
  {
    "objectID": "infections.html#plot-cattle-numbers",
    "href": "infections.html#plot-cattle-numbers",
    "title": "Outbreak Magnitude",
    "section": "Plot Cattle Numbers",
    "text": "Plot Cattle Numbers\nplot_infected_cattle() returns a plot with the duration of incubation phase transmission on the x-axis and the median number of infected cattle (log10) on the y-axis.\n\nCentral U.S.Eastern U.S.\n\n\n\n\nCode\ncentral_cattle_plot &lt;- plot_infected_cattle(cattle_central_summary, \"central\")\n\ncentral_cattle_plot\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neastern_cattle_plot &lt;- plot_infected_cattle(cattle_eastern_summary, \"eastern\")\n\neastern_cattle_plot"
  },
  {
    "objectID": "duration.html",
    "href": "duration.html",
    "title": "Epidemic Duration",
    "section": "",
    "text": "summarize_detections() returns a summary of detection events by iteration.\n\n\nCode\ndetect_summary &lt;- summarize_detections(detection)\n\n\nView a subset of detect_summary\n\n\nCode\n## Filter data to scenario\ndetect_summary_select &lt;- detect_summary %&gt;%\n  filter(region == \"central\") %&gt;%\n  filter(scenario_type == \"suboptimal\") %&gt;%\n  filter(preclinical == 2)\n\n## Select and order columns to display\ndetect_summary_select &lt;- detect_summary_select[c(\"iteration\", \"farms_detected\", \"first_detect\", \"last_detect\", \"duration\")]\n\n## Check data\nhead(detect_summary_select)\n\n\n\n\n\n\niteration\nfarms_detected\nfirst_detect\nlast_detect\nduration\n\n\n\n\n1\n82\n18\n68\n50\n\n\n2\n13\n18\n36\n18\n\n\n3\n179\n18\n90\n72\n\n\n4\n10\n18\n44\n26\n\n\n5\n20\n18\n49\n31\n\n\n6\n115\n18\n118\n100\n\n\n\n\n\n\n\n\ngenerate_detect_statistics() returns summary statistics for each modeling scenario. Results are grouped by region, scenario_type, and preclinical.\n\n\nCode\ndetect_config_summary &lt;- generate_detect_statistics(detect_summary)"
  },
  {
    "objectID": "duration.html#detection-summary",
    "href": "duration.html#detection-summary",
    "title": "Epidemic Duration",
    "section": "",
    "text": "summarize_detections() returns a summary of detection events by iteration.\n\n\nCode\ndetect_summary &lt;- summarize_detections(detection)\n\n\nView a subset of detect_summary\n\n\nCode\n## Filter data to scenario\ndetect_summary_select &lt;- detect_summary %&gt;%\n  filter(region == \"central\") %&gt;%\n  filter(scenario_type == \"suboptimal\") %&gt;%\n  filter(preclinical == 2)\n\n## Select and order columns to display\ndetect_summary_select &lt;- detect_summary_select[c(\"iteration\", \"farms_detected\", \"first_detect\", \"last_detect\", \"duration\")]\n\n## Check data\nhead(detect_summary_select)\n\n\n\n\n\n\niteration\nfarms_detected\nfirst_detect\nlast_detect\nduration\n\n\n\n\n1\n82\n18\n68\n50\n\n\n2\n13\n18\n36\n18\n\n\n3\n179\n18\n90\n72\n\n\n4\n10\n18\n44\n26\n\n\n5\n20\n18\n49\n31\n\n\n6\n115\n18\n118\n100\n\n\n\n\n\n\n\n\ngenerate_detect_statistics() returns summary statistics for each modeling scenario. Results are grouped by region, scenario_type, and preclinical.\n\n\nCode\ndetect_config_summary &lt;- generate_detect_statistics(detect_summary)"
  },
  {
    "objectID": "duration.html#epidemic-duration",
    "href": "duration.html#epidemic-duration",
    "title": "Epidemic Duration",
    "section": "Epidemic Duration",
    "text": "Epidemic Duration\nThe number of days between the first detection and last detection in a single outbreak\n\n\nCode\nduration_summary &lt;- detect_config_summary %&gt;%         \n  filter(summary == \"duration\")\n\n\n\nCentral U.S.Eastern U.S.\n\n\n\n\nCode\n## Filter to central region\nduration_central_summary &lt;- duration_summary %&gt;%\n  filter(region == \"central\")\n\n## Select and order columns\nduration_central_summary &lt;- duration_central_summary[c(\"scenario_type\", \"preclinical\", \"mean\", \"q05\", \"q25\", \"q50\", \"q75\", \"q95\")]\n\nduration_central_summary\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nscenario_type\npreclinical\nmean\nq05\nq25\nq50\nq75\nq95\n\n\n\n\noptimal\n0\n15.8400\n2.00\n2.00\n13.0\n22.00\n45.00\n\n\noptimal\n1\n21.9520\n2.00\n8.00\n17.0\n28.00\n61.00\n\n\noptimal\n2\n28.7140\n2.00\n12.00\n23.0\n37.00\n75.00\n\n\noptimal\n3\n44.3140\n6.00\n15.00\n28.0\n59.00\n135.00\n\n\nsuboptimal\n0\n48.5040\n10.00\n24.00\n38.0\n65.25\n124.05\n\n\nsuboptimal\n1\n67.6460\n14.00\n28.00\n53.0\n93.25\n181.00\n\n\nsuboptimal\n2\n90.3340\n15.90\n34.50\n71.5\n141.00\n213.05\n\n\nsuboptimal\n3\n119.5380\n17.95\n48.00\n108.0\n189.00\n243.00\n\n\nlow-virulence\n6\n308.7667\n212.45\n291.25\n340.0\n341.00\n341.00\n\n\n\n\n\n\n\n\n\n\nCode\n## Filter to eastern region\nduration_eastern_summary &lt;- duration_summary %&gt;%\n  filter(region == \"eastern\")\n\n## Select and order columns\nduration_eastern_summary &lt;- duration_eastern_summary[c(\"scenario_type\", \"preclinical\", \"mean\", \"q05\", \"q25\", \"q50\", \"q75\", \"q95\")]\n\nduration_eastern_summary\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nscenario_type\npreclinical\nmean\nq05\nq25\nq50\nq75\nq95\n\n\n\n\noptimal\n0\n17.258\n2.00\n2.00\n15.0\n25.00\n50.00\n\n\noptimal\n1\n23.564\n2.00\n9.75\n19.0\n31.00\n68.10\n\n\noptimal\n2\n32.520\n2.00\n14.00\n24.0\n41.00\n94.05\n\n\noptimal\n3\n39.916\n2.00\n16.00\n29.5\n56.25\n104.10\n\n\nsuboptimal\n0\n47.752\n9.00\n23.00\n38.0\n63.25\n118.05\n\n\nsuboptimal\n1\n62.646\n11.95\n28.00\n53.0\n80.00\n157.10\n\n\nsuboptimal\n2\n81.336\n13.95\n35.00\n64.0\n110.25\n205.25\n\n\nsuboptimal\n3\n107.550\n17.95\n47.00\n95.0\n152.25\n250.00\n\n\nlow-virulence\n6\n284.674\n76.95\n259.75\n318.5\n341.00\n341.00"
  },
  {
    "objectID": "duration.html#significance-test",
    "href": "duration.html#significance-test",
    "title": "Epidemic Duration",
    "section": "Significance Test",
    "text": "Significance Test\nPerform significance testing on optimal and suboptimal detection scenarios\n\n\nCode\n## Filter out low virulence scenarios\nno_LV_detect &lt;- detection %&gt;%\n  filter(scenario_type != \"low-virulence\")\n\nno_LV_detect_summary &lt;- summarize_detections(no_LV_detect)\n\n\n\nLinear Model\n\nCentral U.S.Eastern U.S.\n\n\n\n\nCode\n## Filter to central region\nno_LV_detect_central_summary &lt;- no_LV_detect_summary %&gt;%\n  filter(region == \"central\")\n\nmodel_central_duration &lt;- lm(duration ~ preclinical * scenario_type, \n                       data = no_LV_detect_central_summary)\n\nsummary(model_central_duration)\n\n\n\nCall:\nlm(formula = duration ~ preclinical * scenario_type, data = no_LV_detect_central_summary)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-117.54  -24.66   -7.84   15.38  227.46 \n\nCoefficients:\n                             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                    32.172      1.479  21.749  &lt; 2e-16 ***\npreclinical1                   12.627      2.092   6.036 1.72e-09 ***\npreclinical2                   27.352      2.092  13.075  &lt; 2e-16 ***\npreclinical3                   49.754      2.092  23.784  &lt; 2e-16 ***\nscenario_type.L                23.097      2.092  11.041  &lt; 2e-16 ***\npreclinical1:scenario_type.L    9.214      2.958   3.114  0.00186 ** \npreclinical2:scenario_type.L   20.475      2.958   6.921 5.21e-12 ***\npreclinical3:scenario_type.L   30.094      2.958  10.172  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 46.78 on 3992 degrees of freedom\nMultiple R-squared:  0.3411,    Adjusted R-squared:   0.34 \nF-statistic: 295.3 on 7 and 3992 DF,  p-value: &lt; 2.2e-16\n\n\n\n\n\n\nCode\n## Filter to eastern region\nno_LV_detect_eastern_summary &lt;- no_LV_detect_summary %&gt;%\n  filter(region == \"eastern\")\n\nmodel_eastern_duration &lt;- lm(duration ~ preclinical * scenario_type, \n                       data = no_LV_detect_eastern_summary)\n\nsummary(model_eastern_duration)\n\n\n\nCall:\nlm(formula = duration ~ preclinical * scenario_type, data = no_LV_detect_eastern_summary)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-105.550  -22.672   -7.752   14.447  256.664 \n\nCoefficients:\n                             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                    32.505      1.366  23.791  &lt; 2e-16 ***\npreclinical1                   10.600      1.932   5.486 4.37e-08 ***\npreclinical2                   24.423      1.932  12.640  &lt; 2e-16 ***\npreclinical3                   41.228      1.932  21.338  &lt; 2e-16 ***\nscenario_type.L                21.563      1.932  11.160  &lt; 2e-16 ***\npreclinical1:scenario_type.L    6.073      2.733   2.222   0.0263 *  \npreclinical2:scenario_type.L   12.956      2.733   4.741 2.20e-06 ***\npreclinical3:scenario_type.L   26.262      2.733   9.611  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 43.2 on 3992 degrees of freedom\nMultiple R-squared:  0.3075,    Adjusted R-squared:  0.3063 \nF-statistic: 253.2 on 7 and 3992 DF,  p-value: &lt; 2.2e-16\n\n\n\n\n\n\n\nANOVA\n\nCentral U.S.Eastern U.S.\n\n\n\n\nCode\nanova(model_central_duration)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\npreclinical\n3\n1370030.7\n456676.909\n208.70868\n0\n\n\nscenario_type\n1\n2894493.8\n2894493.800\n1322.83017\n0\n\n\npreclinical:scenario_type\n3\n258144.5\n86048.159\n39.32539\n0\n\n\nResiduals\n3992\n8734922.7\n2188.107\nNA\nNA\n\n\n\n\n\n\n\n\n\n\nCode\nanova(model_eastern_duration)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDf\nSum Sq\nMean Sq\nF value\nPr(&gt;F)\n\n\n\n\npreclinical\n3\n955037.2\n318345.721\n170.54314\n0\n\n\nscenario_type\n1\n2162854.5\n2162854.542\n1158.67744\n0\n\n\npreclinical:scenario_type\n3\n190807.1\n63602.367\n34.07285\n0\n\n\nResiduals\n3992\n7451698.8\n1866.658\nNA\nNA"
  },
  {
    "objectID": "duration.html#plot-duration",
    "href": "duration.html#plot-duration",
    "title": "Epidemic Duration",
    "section": "Plot Duration",
    "text": "Plot Duration\nplot_epidemic_duration() returns a plot with median epidemic duration (days) on the x-axis and the duration of incubation phase transmission on the y-axis.\n\nCentral U.S.Eastern U.S.\n\n\n\n\nCode\ncentral_duration_plot &lt;- plot_epidemic_duration(duration_central_summary, \"central\")\n\ncentral_duration_plot\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neastern_duration_plot &lt;- plot_epidemic_duration(duration_eastern_summary, \"eastern\")\n\neastern_duration_plot"
  },
  {
    "objectID": "data_preparation.html",
    "href": "data_preparation.html",
    "title": "Data Preparation",
    "section": "",
    "text": "Load R-packages needed to execute code\n\n\nCode\nlibrary(tidyverse)\nlibrary(usefun)\nlibrary(ggplot2)\nlibrary(here)\nlibrary(patchwork)\nlibrary(scales)\nlibrary(geosphere)\nlibrary(terra)\nlibrary(raster)\nlibrary(sf)\nlibrary(viridis)\nlibrary(pals)\n\nselect &lt;- dplyr::select"
  },
  {
    "objectID": "data_preparation.html#load-libraries",
    "href": "data_preparation.html#load-libraries",
    "title": "Data Preparation",
    "section": "",
    "text": "Load R-packages needed to execute code\n\n\nCode\nlibrary(tidyverse)\nlibrary(usefun)\nlibrary(ggplot2)\nlibrary(here)\nlibrary(patchwork)\nlibrary(scales)\nlibrary(geosphere)\nlibrary(terra)\nlibrary(raster)\nlibrary(sf)\nlibrary(viridis)\nlibrary(pals)\n\nselect &lt;- dplyr::select"
  },
  {
    "objectID": "data_preparation.html#custom-functions",
    "href": "data_preparation.html#custom-functions",
    "title": "Data Preparation",
    "section": "Custom Functions",
    "text": "Custom Functions\nLoad custom functions to process InterSpread Plus outputs and generate figures. These are available from the linked repository at the top of the script.\n\n\nCode\nsource(here(\"./R/utilities.R\"))\nsource_dir(\"./R\")"
  },
  {
    "objectID": "data_preparation.html#import-data",
    "href": "data_preparation.html#import-data",
    "title": "Data Preparation",
    "section": "Import Data",
    "text": "Import Data\n\n\nCode\n## Assign file path\nfile_path &lt;- \"./script-inputs/isp-outputs\"\n\n\n\nInfection Data\nimport_infection_data() reads the Outputs_Infection.txt files that include data on simulated infection events.\n\n\nCode\ninfection &lt;- import_infection_data(file_path)\n\n\n\nAll RegionsCentral U.S.Eastern U.S.\n\n\nCheck the number of infection events\n\n\nCode\nnrow(infection)\n\n\n[1] 4214927\n\n\nCheck infect_day statistics\n\n\nCode\ninfection %&gt;%\n  summarize(\n    mean = mean(infect_day),\n    min = min(infect_day),\n    median = median(infect_day),\n    max = max(infect_day))\n\n\n\n\n\n\nmean\nmin\nmedian\nmax\n\n\n\n\n141.7015\n10\n136\n365\n\n\n\n\n\n\n\n\nCheck the number of infection events\n\n\nCode\n## Filter to central region\ninfection_central &lt;- infection %&gt;%\n  filter(region == \"central\")\n\n## Check data frame dimensions\nnrow(infection_central)\n\n\n[1] 2224274\n\n\nCheck infect_day statistics\n\n\nCode\ninfection_central %&gt;%\n  summarize(\n    mean = mean(infect_day),\n    min = min(infect_day),\n    median = median(infect_day),\n    max = max(infect_day))\n\n\n\n\n\n\nmean\nmin\nmedian\nmax\n\n\n\n\n139.6225\n10\n132\n365\n\n\n\n\n\n\n\n\nCheck the number of infection events\n\n\nCode\n## Filter to eastern region\ninfection_eastern &lt;- infection %&gt;%\n  filter(region == \"eastern\")\n\n## Check data frame dimensions\nnrow(infection_eastern)\n\n\n[1] 1990653\n\n\nCheck infect_day statistics\n\n\nCode\ninfection_eastern %&gt;%\n  summarize(\n    mean = mean(infect_day),\n    min = min(infect_day),\n    median = median(infect_day),\n    max = max(infect_day))\n\n\n\n\n\n\nmean\nmin\nmedian\nmax\n\n\n\n\n144.0246\n10\n140\n365\n\n\n\n\n\n\n\n\n\n\n\nDetection Data\nimport_detection_data() reads the Outputs_Detection.txt files that include data on simulated detection events.\n\n\nCode\ndetection &lt;- import_detection_data(file_path)\n\n\n\nAll RegionsCentral U.S.Eastern U.S.\n\n\nCheck the number of detection events\n\n\nCode\nnrow(detection)\n\n\n[1] 4154347\n\n\nCheck detect_day statistics\n\n\nCode\ndetection %&gt;%\n  summarize(\n    mean = mean(detect_day),\n    min = min(detect_day),\n    median = median(detect_day),\n    max = max(detect_day))\n\n\n\n\n\n\nmean\nmin\nmedian\nmax\n\n\n\n\n149.9366\n15\n145\n365\n\n\n\n\n\n\n\n\nCheck the number of detection events\n\n\nCode\n## Filter to central region\ndetection_central &lt;- detection %&gt;%\n  filter(region == \"central\")\n\nnrow(detection_central)\n\n\n[1] 2190070\n\n\nCheck detect_day statistics\n\n\nCode\ndetection_central %&gt;%\n  summarize(\n    mean = mean(detect_day),\n    min = min(detect_day),\n    median = median(detect_day),\n    max = max(detect_day))\n\n\n\n\n\n\nmean\nmin\nmedian\nmax\n\n\n\n\n147.7716\n15\n141\n365\n\n\n\n\n\n\n\n\nCheck the number of detection events\n\n\nCode\n## Filter to eastern region\ndetection_eastern &lt;- detection %&gt;%\n  filter(region == \"eastern\")\n\nnrow(detection_eastern)\n\n\n[1] 1964277\n\n\nCheck detect_day statistics\n\n\nCode\ndetection_eastern %&gt;%\n  summarize(\n    mean = mean(detect_day),\n    min = min(detect_day),\n    median = median(detect_day),\n    max = max(detect_day))\n\n\n\n\n\n\nmean\nmin\nmedian\nmax\n\n\n\n\n152.3506\n15\n150\n365"
  },
  {
    "objectID": "data_preparation.html#read-farm-reference-file",
    "href": "data_preparation.html#read-farm-reference-file",
    "title": "Data Preparation",
    "section": "Read Farm Reference File",
    "text": "Read Farm Reference File\nThe FMD Farm Reference File used for this project contains geographic coordinates for theoretical farm locations. Premises data were generated using the Farm Location and Agricultural Production Simulator (FLAPS, see Burdett et al. 2015) and do not reflect true farm locations. Farm demographics are based upon data collected in the U.S. Census of Agriculture conducted by the USDA National Agricultural Statistical Service (NASS).\n\n\nCode\nreference &lt;- read.csv2(here(\"script-inputs/reference-files/FMD_Reference_File.csv\"), header=TRUE, sep=\",\")\n\ncolnames(reference) &lt;- c(\n                      \"premises\",\n                      \"class\",\n                      \"cattle\",\n                      \"weight\",\n                      \"x\",\n                      \"y\",\n                      \"state\",\n                      \"longitude\",\n                      \"latitude\",\n                      \"geo_region\"\n                      )\n\n## Select columns needed for spread analyses\nreference &lt;- reference %&gt;%\n  mutate(longitude = as.numeric(longitude),\n         latitude = as.numeric(latitude)) %&gt;%\n  select(-c(weight, cattle, x, y, geo_region))\n\nnrow(reference)\n\n\n[1] 889759\n\n\n\nWhat does this mean?\nEach row in reference contains data for a unique, theoretical cattle premises. This data is used to simulate FMDV-spread between cattle farms throughout the United States."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Overview",
    "section": "",
    "text": "Under Active Development\n\n\n\nThis site includes exploratory analyses that are subject to change."
  },
  {
    "objectID": "index.html#about",
    "href": "index.html#about",
    "title": "Overview",
    "section": "About",
    "text": "About\nThis site provides a demonstrative workflow for analyses of InterSpread Plus outputs from a FMDV preclinical transmission model in United States cattle. Simulations were run for multiple geographic regions. Figures for the Western U.S. are included in the main text. Tables and figures for the Eastern U.S. and Central U.S. region scenarios are included on this site."
  },
  {
    "objectID": "index.html#navigation",
    "href": "index.html#navigation",
    "title": "Overview",
    "section": "Navigation",
    "text": "Navigation\nThe menu at right can be used to navigate through major sections on a webpage. Links across the top of the page will direct to specific analyses. Throughout this website, panels are used to display results across regional scenarios.\n\n\n\n\n\n\nView Comparisons\n\n\n\nSelect the tabs to view comparisons between regional scenarios.\n\n\n\nCentral U.S.Eastern U.S.\n\n\nFMDV-spread was simulated throughout the Central U.S. region.\n\n\nFMDV-spread was simulated throughout the Eastern U.S. region."
  },
  {
    "objectID": "outbreak_maps.html",
    "href": "outbreak_maps.html",
    "title": "Outbreak Maps",
    "section": "",
    "text": "Prepare to plot outbreak maps. First, get shapefile and set region boundaries. Then, create a raster grid version. Code demonstrates the workflow for the Eastern U.S. region. Outbreak maps for the Central U.S. are included below.\n\n\nGet shapefile and subset to region\n\n\nCode\n## Get shapefile for conterminous U.S.\nwhole_us &lt;- vect(here(\"script-inputs/shapefile/Contiguous_USA_for Regional_Model.shp\")) \n\n## Boundaries for eastern U.S.\neastern_us &lt;- subset(whole_us, whole_us$SUB_REGION %in% \n                       c(\"East North Central\", \"East North Central\", \n                         \"East South Central\", \"east South Central\",\n                         \"New England\", \"Middle Atlantic\", \"South Atlantic\"))\n\n\n\n\n\nCreate a raster grid version for each region\n\n\nCode\ntmp_r &lt;- rast(ext(eastern_us), \n              resolution = 25000, # 25km grid\n              crs = crs(eastern_us))\n\neast_r  &lt;- rasterize(eastern_us, tmp_r)\n\neast_r[east_r == 1] &lt;- 0 # set land areas to 0"
  },
  {
    "objectID": "outbreak_maps.html#create-raster-grids",
    "href": "outbreak_maps.html#create-raster-grids",
    "title": "Outbreak Maps",
    "section": "",
    "text": "Prepare to plot outbreak maps. First, get shapefile and set region boundaries. Then, create a raster grid version. Code demonstrates the workflow for the Eastern U.S. region. Outbreak maps for the Central U.S. are included below.\n\n\nGet shapefile and subset to region\n\n\nCode\n## Get shapefile for conterminous U.S.\nwhole_us &lt;- vect(here(\"script-inputs/shapefile/Contiguous_USA_for Regional_Model.shp\")) \n\n## Boundaries for eastern U.S.\neastern_us &lt;- subset(whole_us, whole_us$SUB_REGION %in% \n                       c(\"East North Central\", \"East North Central\", \n                         \"East South Central\", \"east South Central\",\n                         \"New England\", \"Middle Atlantic\", \"South Atlantic\"))\n\n\n\n\n\nCreate a raster grid version for each region\n\n\nCode\ntmp_r &lt;- rast(ext(eastern_us), \n              resolution = 25000, # 25km grid\n              crs = crs(eastern_us))\n\neast_r  &lt;- rasterize(eastern_us, tmp_r)\n\neast_r[east_r == 1] &lt;- 0 # set land areas to 0"
  },
  {
    "objectID": "outbreak_maps.html#extract-file-paths",
    "href": "outbreak_maps.html#extract-file-paths",
    "title": "Outbreak Maps",
    "section": "Extract File Paths",
    "text": "Extract File Paths\nAssign regional scenario and extract corresponding file paths\n\n\nCode\nregional_scenario &lt;- \"eastern\"\n\nregional_path &lt;- sprintf(\"%s/outputs_%s\", generic_path, regional_scenario)\n\nregion_paths &lt;- list.files(path = here(regional_path),\n                            recursive = T, pattern= \"Outputs_Detection\", full.names=TRUE)"
  },
  {
    "objectID": "outbreak_maps.html#cumulative-cases-detections",
    "href": "outbreak_maps.html#cumulative-cases-detections",
    "title": "Outbreak Maps",
    "section": "Cumulative Cases Detections",
    "text": "Cumulative Cases Detections\n\nCount Cumulative Cases\nraster_point_counts() will count the number of detection events in each 25km cell. Smoothing the raster will improve the appearance by making the cells smaller and finding averages of surrounding cells.\n\n\nCode\n## Extract file paths to data\nregional_path &lt;- sprintf(\"%s/outputs_%s\", generic_path, \"eastern\")\n\nregion_paths &lt;- list.files(path = here(regional_path),\n                            recursive = T, pattern= \"Outputs_Detection\", full.names=TRUE)\n\n## Count events\ncount_events &lt;- raster_point_counts(region_paths, # paths to files\n                                    reference, # coordinate references\n                                    east_r) # raster defining grid\n\n## Smooth raster\ncount_events &lt;- smooth_raster(count_events)\n\n\n\n\nPlot Cumulative Cases\nplot_raster_stack() will plot the rasters for comparison.\n\n\nCode\nno_low_virulence &lt;- subset(count_events, \n                           !(names(count_events) %in% \"low-virulence/6-days-preclinical\"))\n\nonly_low_virulence &lt;- subset(count_events, \n                            names(count_events) %in% \"low-virulence/6-days-preclinical\")"
  },
  {
    "objectID": "outbreak_maps.html#eastern-u.s.-maps",
    "href": "outbreak_maps.html#eastern-u.s.-maps",
    "title": "Outbreak Maps",
    "section": "Eastern U.S. Maps",
    "text": "Eastern U.S. Maps\nCompare outbreak maps across optimal and suboptimal detection scenarios\n\n\nCode\nstack_set &lt;- plot_raster_stack(no_low_virulence, eastern_us)\n\nstack_set\n\n\n\n\n\n\n\n\n\nView map of cumulative cases for low-virulence scenario\n\n\nCode\nlv_set &lt;- plot_raster_stack(only_low_virulence, eastern_us)\n\nlv_set"
  },
  {
    "objectID": "outbreak_maps.html#central-u.s.-maps",
    "href": "outbreak_maps.html#central-u.s.-maps",
    "title": "Outbreak Maps",
    "section": "Central U.S. Maps",
    "text": "Central U.S. Maps\nCompare outbreak maps across optimal and suboptimal detection scenarios\n\n\nCode\nstack_set &lt;- plot_raster_stack(no_low_virulence, central_us)\n\nstack_set\n\n\n\n\n\n\n\n\n\nView map of cumulative cases for low-virulence scenario\n\n\nCode\nlv_set &lt;- plot_raster_stack(only_low_virulence, central_us)\n\nlv_set"
  },
  {
    "objectID": "outbreak_maps.html#cumulative-cases",
    "href": "outbreak_maps.html#cumulative-cases",
    "title": "Outbreak Maps",
    "section": "Cumulative Cases",
    "text": "Cumulative Cases\n\nCount Cumulative Case Detections\nraster_point_counts() will count the number of detection events in each 25km cell. Smoothing the raster will improve the appearance by making the cells smaller and finding averages of surrounding cells.\n\n\nCode\n## Extract file paths to data\nregional_path &lt;- sprintf(\"%s/outputs_%s\", generic_path, \"eastern\")\n\nregion_paths &lt;- list.files(path = here(regional_path),\n                            recursive = T, pattern= \"Outputs_Detection\", full.names=TRUE)\n\n## Count events\ncount_events &lt;- raster_point_counts(region_paths, # paths to files\n                                    reference, # coordinate references\n                                    east_r) # raster defining grid\n\n## Smooth raster\ncount_events &lt;- smooth_raster(count_events)\n\n\n\n\nPlot Cumulative Case Detections\nplot_raster_stack() will plot the rasters for comparison.\n\n\nCode\nno_low_virulence &lt;- subset(count_events, \n                           !(names(count_events) %in% \"low-virulence/6-days-preclinical\"))\n\nonly_low_virulence &lt;- subset(count_events, \n                            names(count_events) %in% \"low-virulence/6-days-preclinical\")"
  }
]