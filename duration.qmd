---
title: "Epidemic Duration"
description: "Summarize the epidemic duration of simulated outbreaks"
format:
  html: 
    df-print: kable
    code-fold: true
    code-summary: "Code"
    code-overflow: wrap
    toc-title: Page Contents
    toc: true
    toc-depth: 2
    toc-location: right
    number-sections: false
    html-math-method: katex
    smooth-scroll: true
editor: source
editor_options: 
  chunk_output_type: console
---
```{=html}
<style type="text/css">

body, td {
   font-size: 13pt;
}
code.r{
  font-size: 9pt;
}
pre {
  font-size: 11pt
}
</style>
```

```{r, warning=FALSE, message=FALSE, echo=FALSE}
library(tidyverse)
options(dplyr.summarise.inform = FALSE)

library(usefun)
library(ggplot2)
library(here)
library(patchwork)
library(scales)

## Custom Functions
source(here("./R/utilities.R"))
source_dir("./R")

## Assign file path 
file_path <- "./script-inputs/isp-outputs"

## Import detection data
detection <- import_detection_data(file_path)

## Order scenario_type
detection$scenario_type <- ordered(factor(detection$scenario_type), c("optimal", "suboptimal", "low-virulence"))

## Order regions
detection$region <- ordered(factor(detection$region), c("central", "eastern"))
```

## Detection Summary
`summarize_detections()` returns a summary of detection events by iteration.
```{r}
detect_summary <- summarize_detections(detection)
```

View a subset of `detect_summary`
```{r}
## Filter data to scenario
detect_summary_select <- detect_summary %>%
  filter(region == "central") %>%
  filter(scenario_type == "suboptimal") %>%
  filter(preclinical == 2)

## Select and order columns to display
detect_summary_select <- detect_summary_select[c("iteration", "farms_detected", "first_detect", "last_detect", "duration")]

## Check data
head(detect_summary_select)
```

### Summary Statistics
`generate_detect_statistics()` returns summary statistics for each modeling scenario. Results are grouped by `region`, `scenario_type`, and `preclinical`.
```{r}
detect_config_summary <- generate_detect_statistics(detect_summary)
```

## Epidemic Duration
The number of days between the first detection and last detection in a single outbreak
```{r}
duration_summary <- detect_config_summary %>%         
  filter(summary == "duration")
```

::: panel-tabset
## Central U.S.
```{r, warning=FALSE, message=FALSE}
## Filter to central region
duration_central_summary <- duration_summary %>%
  filter(region == "central")

## Select and order columns
duration_central_select <- duration_central_summary[c("scenario_type", "preclinical", "mean", "q05", "q25", "q50", "q75", "q95")]

duration_central_select <- duration_central_select %>%
  mutate_if(is.numeric, round, digits = 2)

duration_central_select
```

## Eastern U.S.
```{r, warning=FALSE, message=FALSE}
## Filter to eastern region
duration_eastern_summary <- duration_summary %>%
  filter(region == "eastern")

## Select and order columns
duration_eastern_select <- duration_eastern_summary[c("scenario_type", "preclinical", "mean", "q05", "q25", "q50", "q75", "q95")]

duration_eastern_select <- duration_eastern_select %>%
  mutate_if(is.numeric, round, digits = 2)

duration_eastern_select
```

:::

## Significance Test
Perform significance testing on `optimal` and `suboptimal` detection scenarios
```{r}
## Filter out low virulence scenarios
no_LV_detect <- detection %>%
  filter(scenario_type != "low-virulence")

no_LV_detect_summary <- summarize_detections(no_LV_detect)
```

### Linear Model

::: panel-tabset
## Central U.S.
```{r}
## Filter to central region
no_LV_detect_central_summary <- no_LV_detect_summary %>%
  filter(region == "central")

model_central_duration <- lm(duration ~ preclinical * scenario_type, 
                       data = no_LV_detect_central_summary)

summary(model_central_duration)
```

## Eastern U.S.
```{r}
## Filter to eastern region
no_LV_detect_eastern_summary <- no_LV_detect_summary %>%
  filter(region == "eastern")

model_eastern_duration <- lm(duration ~ preclinical * scenario_type, 
                       data = no_LV_detect_eastern_summary)

summary(model_eastern_duration)
```

:::

### ANOVA

::: panel-tabset
## Central U.S.
```{r message=FALSE, warning=FALSE}
anova(model_central_duration)
```

## Eastern U.S.
```{r message=FALSE, warning=FALSE}
anova(model_eastern_duration)
```

:::

## Plot Duration
```{r, warning=FALSE, message=FALSE, echo=FALSE}
## Assign scenario_type colors
scenario_colors <- c("#74add1", "orange2", "red4") 
```

`plot_epidemic_duration()` returns a plot with median epidemic duration (days) on the x-axis and the duration of incubation phase transmission on the y-axis.

::: panel-tabset
## Central U.S.
```{r fig.width=12, fig.height=10, message=FALSE, warning=FALSE}
central_duration_plot <- plot_epidemic_duration(duration_central_summary, "central")

central_duration_plot
```

## Eastern U.S.
```{r fig.width=12, fig.height=10, message=FALSE, warning=FALSE}
eastern_duration_plot <- plot_epidemic_duration(duration_eastern_summary, "eastern")

eastern_duration_plot
```

:::
